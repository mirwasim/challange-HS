# apiVersion: v1
# kind: Namespace
# metadata:
#   name: hungerstation
# ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
  namespace: hungerstation
  labels:
     env: production
     app: frontend
spec:
  selector:
    matchLabels:
      env: production
      app: frontend
  replicas: 1
  template:
    metadata:
      name: myapp-pod 
      labels:
        env: production
        app: frontend
    spec:
      containers:
      - name: myapp-container
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.containerPort.appPort }}
        envFrom:
        - configMapRef:
           name: app-config
        - secretRef:
           name: app-secret
        resources:
           requests:
               memory: {{ .Values.resourceMemory.request.rmemory | quote }}                  
               cpu: {{ .Values.resourceMemory.request.rcpu }}                       
           limits:
              memory: {{ .Values.resourceMemory.limit.lmemory | quote }}                  
              cpu: {{ .Values.resourceMemory.limit.lcpu }} 
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.containerPort.appPort }}
          initialDelaySeconds: 20
          periodSeconds: 5
        livenessProbe:
          httpGet:
             path: /
             port: {{ .Values.containerPort.appPort }}
          initialDelaySeconds: 30
          periodSeconds: 5
        startupProbe:
          exec:
            command:
            - nc 
            - -zv
            - redis 
            - "6379"
          failureThreshold: 30
          periodSeconds: 5

        
---
apiVersion: v1
kind: Service
metadata: 
  name: myapp-service
  namespace: hungerstation
  labels:
    name: myapp-service
spec:
  ports:
    - port: {{ .Values.service.port }}  
      protocol: TCP
      targetPort: {{ .Values.containerPort.appPort }}       
  selector:
    env: production
    app: frontend